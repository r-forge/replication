echo = TRUE,
size = "scriptsize",
warning = FALSE,
message = FALSE)
# Chunk 2
library(ReplicationSuccess)
library(ggplot2)
data("RProjects")
SSRP <- subset(RProjects, project == "Social Sciences")
gg_r <-  ggplot(data = SSRP, aes(x = ro, y = rr)) +
geom_hline(yintercept = 0, lty = 2) +
geom_abline(intercept = 0, slope = 1, col = "grey") +
geom_point(alpha = 0.7, size = 7, shape = 21,
fill = "midnightblue") +
labs(x = expression(paste("Original effect estimate ", r[o])),
y = expression(paste("Replication effect estimate ", r[r]))) +
lims(x = c(-0.15, 1), y = c(-0.15, 1)) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30)); gg_r
# Chunk 3
r <- seq(-1, 1, 0.001)
ztrans_df <- data.frame(r, z = atanh(r))
ggplot(data = ztrans_df, aes(x = r, y = z)) +
geom_abline(intercept = 0, slope = 1, lty = 2, size = 1,
alpha = 0.6) +
geom_line(size = 1) +
labs(x = expression(paste("Correlation ", italic(r))),
y = expression(paste("Fisher-", italic(z)))) +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
# Chunk 4
library(ReplicationSuccess)
library(ggplot2)
data("RProjects")
SSRP <- subset(RProjects, project == "Social Sciences")
gg_z <- ggplot(data = SSRP, aes(x = fiso, y = fisr)) +
geom_hline(yintercept = 0, lty = 2) +
geom_abline(intercept = 0, slope = 1, col = "grey") +
geom_point(alpha = 0.7, size = 7, shape = 21,
fill = "midnightblue") +
labs(x = expression(paste("Original effect estimate")),
y = expression(paste("Replication effect estimate"))) +
lims(x = c(-0.5, 2), y = c(-0.5, 2)) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30)); gg_z
# Chunk 5
library(ReplicationSuccess)
library(ggplot2)
library(gridExtra)
gg_r2 <- ggplot(data = SSRP, aes(x = ro, y = rr)) +
geom_hline(yintercept = 0, lty = 2) +
geom_abline(intercept = 0, slope = 1, col = "grey") +
geom_point(alpha = 0.7, size = 5, shape = 21,
fill = "midnightblue") +
labs(x = "Original effect estimate",
y = "Replication effect estimate") +
lims(x = c(-0.5, 2), y = c(-0.5, 2)) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15)) +
ggtitle("Correlation scale ") +
theme(plot.title = element_text(color = "red", size = 25))
gg_z2 <- ggplot(data = SSRP, aes(x = fiso, y = fisr)) +
geom_hline(yintercept = 0, lty = 2) +
geom_abline(intercept = 0, slope = 1, col = "grey") +
geom_point(alpha = 0.7, size = 5, shape = 21,
fill = "midnightblue") +
labs(x = "Original effect estimate",
y = "Replication effect estimate") +
lims(x = c(-0.5, 2), y = c(-0.5, 2)) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 15)) +
ggtitle("Fisher-z scale") +
theme(plot.title = element_text(color = "red", size = 25))
grid.arrange(gg_r2, gg_z2,
ncol = 2)
# Chunk 6
study <- subset(SSRP,
study == "Pyc and Rawson (2010), Science")
study$c <- with(study, se_fiso^2/se_fisr^2)
ggplot(data = SSRP, aes(x = fiso, y = fisr)) +
geom_hline(yintercept = 0, lty = 2) +
geom_abline(intercept = 0, slope = 1, col = "grey") +
geom_point(alpha = 0.2, size = 7, shape = 21,
fill = "midnightblue") +
geom_point(data = study,
alpha = 1, size = 7, shape = 21,
fill = "red") +
labs(x = expression(paste("Original effect estimate")),
y = expression(paste("Replication effect estimate"))) +
lims(x = c(-0.5, 2), y = c(-0.5, 2)) +
coord_fixed() +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
# Chunk 7
library(biostatUZH)
options(scipen = 5)
plot_df <- data.frame(Study = c("Original study",
"Replication study"),
z = c(study$fiso, study$fisr),
r = c(study$ro, study$rr),
p = formatPval(x = c(study$po/2,
study$pr/2)),
se = c(study$se_fiso, study$se_fisr),
n = c(1/study$se_fiso^2 + 3,
1/study$se_fisr^2 + 3))
study_plot <- ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.5) +
geom_text(aes(label = paste("italic(p)[o] ==~",
p[1], sep = "")), parse = TRUE,
x = 1, y = 0.8, size = 8) +
geom_text(aes(label = paste("italic(p)[r] ==~",
p[2], sep = "")), parse = TRUE,
x = 2, y = 0.8, size = 8) +
geom_text(aes(label = paste("hat(theta)[o] ==~",
round(z[1], 2),
sep = "")), parse = TRUE,
x = 0.7, y = 0.38, size = 8) +
geom_text(aes(label = paste("hat(theta)[r] ==~",
round(z[2], 2),
sep = "")), parse = TRUE,
x = 2.3,y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[o] ==~", n[1], sep = "")),
parse = TRUE,
x = 0.7, y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[r] ==~", n[2], sep = "")),
parse = TRUE,
x = 2.3, y = 0.1, size = 8) +
ylim(-0.05, 1) +
labs(x = " ", y = "Effect Size") +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
study_plot
# Chunk 8
library(biostatUZH)
options(scipen = 5)
plot_df <- data.frame(Study = c("Original study",
"Replication study"),
z = c(study$fiso, study$fisr),
r = c(study$ro, study$rr),
p = formatPval(x = c(study$po/2,
study$pr/2)),
se = c(study$se_fiso, study$se_fisr),
n = c(1/study$se_fiso^2 + 3,
1/study$se_fisr^2 + 3))
study_plot <- ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.5) +
geom_text(aes(label = paste("italic(p)[o] ==~",
p[1], sep = "")), parse = TRUE,
x = 1, y = 0.8, size = 8) +
geom_text(aes(label = paste("italic(p)[r] ==~",
p[2], sep = "")), parse = TRUE,
x = 2, y = 0.8, size = 8) +
geom_text(aes(label = paste("hat(theta)[o] ==~",
round(z[1], 2),
sep = "")), parse = TRUE,
x = 0.7, y = 0.38, size = 8) +
geom_text(aes(label = paste("hat(theta)[r] ==~",
round(z[2], 2),
sep = "")), parse = TRUE,
x = 2.3,y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[o] ==~", n[1], sep = "")),
parse = TRUE,
x = 0.7, y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[r] ==~", n[2], sep = "")),
parse = TRUE,
x = 2.3, y = 0.1, size = 8) +
annotate("text", x = 1.5, y = study$ro,
label = "?", size = 55,
color = "red") +
ylim(-0.05, 1) +
labs(x = " ", y = "Effect Size") +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
study_plot
# Chunk 9
study_plot
# Chunk 10
ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.5) +
geom_text(aes(label = paste("italic(p)[o] ==~",
p[1], sep = "")), parse = TRUE,
x = 1, y = 0.8, size = 10, color = "red") +
geom_text(aes(label = paste("italic(p)[r] ==~",
p[2], sep = "")), parse = TRUE,
x = 2, y = 0.8, size = 10, color = "red") +
geom_text(aes(label = paste("hat(theta)[o] ==~",
round(z[1], 2),
sep = "")), parse = TRUE,
x = 0.7, y = 0.38, size = 8) +
geom_text(aes(label = paste("hat(theta)[r] ==~",
round(z[2], 2),
sep = "")), parse = TRUE,
x = 2.3,y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[o] ==~", n[1], sep = "")),
parse = TRUE,
x = 0.7, y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[r] ==~", n[2], sep = "")),
parse = TRUE,
x = 2.3, y = 0.1, size = 8) +
ylim(-0.05, 1) +
labs(x = " ", y = "Effect Size") +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
# Chunk 11
pi_df <- predictionInterval(thetao = study$fiso,
seo = study$se_fiso,
ser = study$se_fisr)
pi_df <- tanh(pi_df)
q_pval <- Qtest(thetao = study$fiso, thetar = study$fisr,
seo = study$se_fiso, ser = study$se_fisr)
ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.5) +
annotate(geom = "text", x = 1.47, y = 0.5,
label = paste("italic(p)[Q] ==~", formatPval(q_pval)),
color = "springgreen4", size = 10, parse = TRUE) +
geom_text(aes(label = paste("italic(p)[o] ==~",
p[1], sep = "")), parse = TRUE,
x = 1, y = 0.8, size = 8) +
geom_text(aes(label = paste("italic(p)[r] ==~",
p[2], sep = "")), parse = TRUE,
x = 2, y = 0.8, size = 8) +
geom_text(aes(label = paste("hat(theta)[o] ==~",
round(z[1], 2),
sep = "")), parse = TRUE,
x = 0.7, y = 0.38, size = 8) +
geom_text(aes(label = paste("hat(theta)[r] ==~",
round(z[2], 2),
sep = "")), parse = TRUE,
x = 2.3,y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[o] ==~", n[1], sep = "")),
parse = TRUE,
x = 0.7, y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[r] ==~", n[2], sep = "")),
parse = TRUE,
x = 2.3, y = 0.1, size = 8) +
ylim(-0.05, 1) +
labs(x = " ", y = "Effect Size") +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
# Chunk 12
var_ma_estimate <- with(study, 1/(1/se_fiso^2 + 1/se_fisr^2))
ma_estimate <- with(study, fiso/se_fiso^2 + fisr/se_fisr^2)*
var_ma_estimate
p_ma <- pnorm(abs(ma_estimate/sqrt(var_ma_estimate)),
lower.tail = FALSE)*2
ma_data <- data.frame(se = sqrt(var_ma_estimate),
ma_estimate = ma_estimate,
ma_estimate_r = tanh(ma_estimate),
p_ma = formatPval(p_ma),
stringsAsFactors = FALSE)
ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.5) +
geom_pointrange(data = ma_data,
aes(x = 1.5, y = ma_estimate_r,
ymin = ma_estimate - qnorm(0.975)*se,
ymax = ma_estimate + qnorm(0.975)*se),
size = 1.5, color = "tan3") +
geom_text(data = ma_data, color = "tan3",
aes(x = 1.4, y = ma_estimate_r,
label = paste("italic(p)[M] ==~", p_ma)),
nudge_y = 0.31, nudge_x = 0.12,
size = 10, parse = TRUE) +
geom_text(aes(label = paste("italic(p)[o] ==~",
p[1], sep = "")), parse = TRUE,
x = 1, y = 0.8, size = 8) +
geom_text(aes(label = paste("italic(p)[r] ==~",
p[2], sep = "")), parse = TRUE,
x = 2, y = 0.8, size = 8) +
geom_text(aes(label = paste("hat(theta)[o] ==~",
round(z[1], 2),
sep = "")), parse = TRUE,
x = 0.7, y = 0.38, size = 8) +
geom_text(aes(label = paste("hat(theta)[r] ==~",
round(z[2], 2),
sep = "")), parse = TRUE,
x = 2.3,y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[o] ==~", n[1], sep = "")),
parse = TRUE,
x = 0.7, y = 0.25, size = 8) +
geom_text(aes(label = paste("italic(n)[r] ==~", n[2], sep = "")),
parse = TRUE,
x = 2.3, y = 0.1, size = 8) +
ylim(-0.05, 1) +
labs(x = " ", y = "Effect Size") +
theme_bw() +
theme(axis.text = element_text(size = 25),
axis.title = element_text(size = 30))
# Second axis for Fisher z-scale
lims_r <- tanh(seq(0, 1, 0.5))
labs_r <- round(lims_r, 2)
ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.25) +
geom_text(aes(label = paste("italic(r) ==~",
round(r, 2),
sep = "")), parse = TRUE,
nudge_x = c(-0.31, 0.27), nudge_y = 0.1, size = 6) +
geom_text(aes(label = paste("'Fisher-z ' ==~",
round(z, 2),
sep = "")), parse = TRUE,
nudge_x = c(-0.31, 0.27), nudge_y = -0.1, size = 6) +
scale_y_continuous(limits = c(-0.05, 1.2),
breaks = seq(0, 2.5, 0.5),
sec.axis = sec_axis(trans = ~tanh(.),
breaks = lims_r,
labels = labs_r,
name = expression(paste("Correlation ", italic(r))))) +
labs(x = " ", y = expression(paste("Fisher-",italic(z)))) +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 25))
ggplot(data = plot_df, aes(x = Study, y = z)) +
geom_hline(yintercept = 0, lty = 2) +
geom_pointrange(aes(ymin = z - qnorm(0.975)*se,
ymax = z + qnorm(0.975)*se),
size = 1.25) +
geom_text(aes(label = paste("italic(r) ==~",
round(r, 2),
sep = "")), parse = TRUE,
nudge_x = c(-0.31, 0.27), nudge_y = 0.1, size = 10) +
geom_text(aes(label = paste("'Fisher-z ' ==~",
round(z, 2),
sep = "")), parse = TRUE,
nudge_x = c(-0.31, 0.27), nudge_y = -0.1, size = 10) +
scale_y_continuous(limits = c(-0.05, 1.2),
breaks = seq(0, 2.5, 0.5),
sec.axis = sec_axis(trans = ~tanh(.),
breaks = lims_r,
labels = labs_r,
name = expression(paste("Correlation ", italic(r))))) +
labs(x = " ", y = expression(paste("Fisher-",italic(z)))) +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 25))
powerPooledAnalysis <- function(zo, #z value from the original study
c = 1, # ratio of replication sample size to original sample size
level = 0.025,
designPrior = "predictive",
alternative = "one.sided",
shrinkage = 0) {
d = 1 - shrinkage
v = p2z(level, alternative = alternative)
if (designPrior == "conditional"){
term1 <- sqrt((c+1)/c)
term2 <- sqrt(c+1)*d*zo - v
pSig <- pnorm(term1*term2)
}
if (designPrior == "predictive"){
term1 <- sqrt(1+(1/c))*d*zo
term2 <- sqrt(1/c)*v
pSig <- pnorm(term1 - term2)
}
return(pSig)
}
powerPooledAnalysis(zo = 2, c = 1, level = 0.025, designPrior = "conditional")
powerPooledAnalysis(zo = 10, c = 1, level = 0.025)
powerPooledAnalysis(zo = 10, c = 0.1, level = 0.025)
powerPooledAnalysis(zo = 10, c = 0.001, level = 0.025)
powerPooledAnalysis <- function(zo, #z value from the original study
c = 1, # ratio of replication sample size to original sample size
level = 0.025,
designPrior = "predictive",
alternative = "one.sided",
shrinkage = 0) {
d = 1 - shrinkage
v = p2z(level, alternative = alternative)
if (designPrior == "conditional"){
term1 <- sqrt((c+1)/c)
term2 <- sqrt(c+1)*d*zo - v
pSig <- pnorm(term1*term2)
}
if (designPrior == "predictive"){
term1 <- sqrt(1+(1/c))*d*zo
term2 <- sqrt(1/c)*v
pSig <- pnorm(term1 - term2)
}
return(pSig)
}
data("RProjects")
names(RProjects)
RProjects$po
?RProjects
load("/home/charlotte/Documents/Software/ReplicationSuccess/data/RProjects.rda")
load("/home/charlotte/Documents/Software/ReplicationSuccess/data/RProjects.rda")
load("/home/charlotte/Documents/Software/ReplicationSuccess/data/RProjects.rda")
View(RProjects)
library(tibble)
add_column(RProjects, po1 = z2p(zo, alternative = "one.sided"),
.after = "pr")
add_column(RProjects, po1 = z2p(RProjects$zo, alternative = "one.sided"),
.after = "pr")
RProjects$zo
add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso, alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso, alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, po2 = z2p(RProjects$fisr/RProjects$se_fisr, alternative = "one.sided"),
.after = "po1")
View(RProjects)
library(tibble)
RProjects <- add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso, alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, pr1 = z2p(RProjects$fisr/RProjects$se_fisr, alternative = "one.sided"),
.after = "po1")
data("RProjects")
library(ReplicationSuccess)
data("RProjects")
library(tibble)
RProjects <- add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso, alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, pr1 = z2p(RProjects$fisr/RProjects$se_fisr, alternative = "one.sided"),
.after = "po1")
View(RProjects)
RProjects$po == RProjects$po1*2
mean(RProjects$po == RProjects$po1*2)
mean(RProjects$pr == RProjects$pr1*2)
RProjects$pr == RProjects$pr1*2
RProjects$pr
RProjects$pr - RProjects$pr1
RProjects$pr - RProjects$pr1*2
RProjects$pr[3] - RProjects$pr1*2
RProjects$pr[3] - RProjects$pr1[3*2
RProjects$pr[3] - RProjects$pr1[3]*2
RProjects$pr[3] - RProjects$pr1[3]*2
RProjects$pr[3]
RProjects$pr1[3]
RProjects$fisr/RProjects$se_fisr
?z2p
RProjects <- add_column(RProjects, pr1 = z2p(RProjects$fisr/RProjects$se_fisr, alternative = "greater"),
.after = "po1")
mean(RProjects$pr == RProjects$pr1*2)
RProjects$pr[3] - RProjects$pr1[3]*2
ind <- which(RProjects$pr != RProjects$pr1*2)
ind
RProjects$rr[ind]
z2p(RProjects$fisr/RProjects$se_fisr, alternative = "greater")
z2p(RProjects$fisr/RProjects$se_fisr, alternative = "one.sided")
RProjects$pr[3]
RProjects$zo
RProjects$fisr[3]/RProjects$se_fisr[3]
z2p(1.2, "one.sided")
z2p(1.2, "greater")
z2p(-1.2, "greater")
z2p(-1.2, "one.sided")
?z2p
z2p
z = -2
z2p(z = -2, alternative = "one.sided")
library(ReplicationSuccess)
data("RProjects")
RProjects <- add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso, alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, pr1 = z2p(RProjects$fisr/RProjects$se_fisr, alternative = "greater"),
.after = "po1")
p2z(p = 0.04, alternative = "less")
p2z(p = 0.04, alternative = "one.sided")
library(ReplicationSuccess)
data("RProjects")
library(tibble)
RProjects$pr[ind] == RProjects$pr1[ind]*2
RProjects <- add_column(RProjects, po1 = z2p(RProjects$fiso/RProjects$se_fiso,
alternative = "one.sided"),
.after = "pr")
RProjects <- add_column(RProjects, pr1 = z2p(RProjects$fisr/RProjects$se_fisr,
alternative = "greater"),
.after = "po1")
ind <- which(RProjects$pr != RProjects$pr1*2)
RProjects$rr[ind]
RProjects$pr[ind] == RProjects$pr1[ind]*2
RProjects$pr[ind] == 1 - RProjects$pr1[ind]*2
RProjects$pr[ind] == (1 - RProjects$pr1[ind])*2
RProjects$pr[ind]
(1 - RProjects$pr1[ind])*2
RProjects$pr[ind] - (1 - RProjects$pr1[ind])*2
save(RProjects, file = "RProjects.rda")
?save
save(RProjects, file = "RProjects.rda", version = 2)
remove.packages("ReplicationSuccess", lib="~/R/x86_64-pc-linux-gnu-library/4.1")
devtools::install_github(repo = "SamCH93/ReplicationSuccess", ref = "T1Econtrol")
library(ReplicationSuccess)
data("RProjects")
